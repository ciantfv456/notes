{"ast":null,"code":"let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined\n};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nconst DevHooks = {\n  afterUpdate: null,\n  afterCreateOwner: null\n};\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    root = unowned ? {\n      owned: null,\n      cleanups: null,\n      context: null,\n      owner: null\n    } : {\n      owned: null,\n      cleanups: null,\n      context: null,\n      owner: detachedOwner === undefined ? owner : detachedOwner\n    },\n    updateFn = unowned ? () => fn(() => {\n      throw new Error(\"Dispose method must be an explicit argument to createRoot function\");\n    }) : () => fn(() => untrack(() => cleanNode(root)));\n  DevHooks.afterCreateOwner && DevHooks.afterCreateOwner(root);\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  if (!options.internal) {\n    if (options.name) s.name = options.name;\n    registerGraph(s);\n  }\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE, options);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE, options);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE, options),\n    s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0, options),\n    s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0, options);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = (\"initialValue\" in options),\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v[0];\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : \"ready\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load() {\n    let refetching = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(p && \"then\" in p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source) {\n  let fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : equalFn;\n  let options = arguments.length > 2 ? arguments[2] : undefined;\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE, options);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) console.warn(\"cleanups created outside a `createRoot` or `render` will never be run\");else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) console.warn(\"error handlers created outside a `createRoot` or `render` will never be run\");else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling() {\n  let scheduler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : requestCallback;\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction devComponent(Comp, props) {\n  const c = createComputation(() => untrack(() => {\n    Object.assign(Comp, {\n      [$DEVCOMP]: true\n    });\n    return Comp(props);\n  }), undefined, true, 0);\n  c.props = props;\n  c.observers = null;\n  c.observerSlots = null;\n  c.name = Comp.name;\n  c.component = Comp;\n  updateComputation(c);\n  return c.tValue !== undefined ? c.tValue : c.value;\n}\nfunction registerGraph(value) {\n  if (!Owner) return;\n  if (Owner.sourceMap) Owner.sourceMap.push(value);else Owner.sourceMap = [value];\n  value.graph = Owner;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id, options),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()), undefined, {\n    name: \"children\"\n  });\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (true) throw new Error(\"Potential Infinite Loop Detected.\");\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n    listener = Listener,\n    time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure) {\n  let state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : STALE;\n  let options = arguments.length > 4 ? arguments[4] : undefined;\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) console.warn(\"computations created outside a `createRoot` or `render` will never be disposed\");else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (options && options.name) c.name = options.name;\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  DevHooks.afterCreateOwner && DevHooks.afterCreateOwner(c);\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);else DevHooks.afterUpdate && DevHooks.afterUpdate();\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n  delete node.sourceMap;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(fns, err) {\n  for (const f of fns) f(err);\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  const error = castError(err);\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(fns, error);\n    },\n    state: STALE\n  });else runErrors(fns, error);\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined, options);\n    return res;\n  };\n}\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n        newIndices,\n        newIndicesNext,\n        temp,\n        tempdisposers,\n        tempIndexes,\n        start,\n        end,\n        newEnd,\n        item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j, {\n          name: \"index\"\n        });\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i], {\n        name: \"value\"\n      });\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = devComponent(Comp, props || {});\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return devComponent(Comp, props || {});\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction mergeProps() {\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  for (let i = sources.length - 1; i >= 0; i--) {\n    if (sources[i]) {\n      const descriptors = Object.getOwnPropertyDescriptors(sources[i]);\n      for (const key in descriptors) {\n        if (key in target) continue;\n        Object.defineProperty(target, key, {\n          enumerable: true,\n          get() {\n            for (let i = sources.length - 1; i >= 0; i--) {\n              const v = (sources[i] || {})[key];\n              if (v !== undefined) return v;\n            }\n          }\n        });\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props) {\n  for (var _len2 = arguments.length, keys = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    keys[_key2 - 1] = arguments[_key2];\n  }\n  const blocked = new Set(keys.flat());\n  if ($PROXY in props) {\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  keys.push(Object.keys(descriptors).filter(k => !blocked.has(k)));\n  return keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      if (!(key in props)) continue;\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        },\n        enumerable: true\n      });\n    }\n    return clone;\n  });\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (true) Object.assign(Comp, {\n        [$DEVCOMP]: true\n      });\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\nconst narrowedError = name => `Attempting to access a stale value from <${name}> that could possibly be undefined. This may occur because you are reading the accessor returned from the component at a time where it has already been unmounted. We recommend cleaning up any stale timers or async, or reading from the initial condition.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined), undefined, {\n    name: \"value\"\n  });\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined), undefined, {\n    name: \"value\"\n  });\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => keyed ? a === b : !a === !b,\n    name: \"condition\"\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return props.when;\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, {\n    name: \"value\"\n  });\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => a[0] === b[0] && (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(() => {\n      let conds = conditions();\n      if (!Array.isArray(conds)) conds = [conds];\n      for (let i = 0; i < conds.length; i++) {\n        const c = conds[i].when;\n        if (c) {\n          keyed = !!conds[i].keyed;\n          return [i, c, conds[i]];\n        }\n      }\n      return [-1];\n    }, undefined, {\n      equals,\n      name: \"eval conditions\"\n    });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    return fn ? untrack(() => c(keyed ? when : () => {\n      if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n      return cond.when;\n    })) : c;\n  }, undefined, {\n    name: \"value\"\n  });\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  let v;\n  if (sharedConfig.context && sharedConfig.load && (v = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count))) err = v[0];\n  const [errored, setErrored] = createSignal(err, {\n    name: \"errored\"\n  });\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      if (typeof f !== \"function\" || f.length == 0) console.error(e);\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, {\n    name: \"value\"\n  });\n}\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    let ref = sharedConfig.load(key);\n    if (ref && (p = ref[0]) && p !== \"$$f\") {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if (err || sharedConfig.done) {\n          err && (error = err);\n          return set();\n        }\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\nconst DEV = {\n  hooks: DevHooks,\n  writeSignal,\n  registerGraph\n};\nif (globalThis) {\n  if (!globalThis.Solid$$) globalThis.Solid$$ = true;else console.warn(\"You appear to have multiple instances of Solid. This can lead to unexpected behavior.\");\n}\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };","map":{"version":3,"names":["taskIdCounter","isCallbackScheduled","isPerformingWork","taskQueue","currentTask","shouldYieldToHost","yieldInterval","deadline","maxYieldInterval","scheduleCallback","scheduledCallback","maxSigned31BitInt","setupScheduler","channel","MessageChannel","port","port2","postMessage","port1","onmessage","currentTime","performance","now","hasTimeRemaining","hasMoreWork","error","navigator","scheduling","isInputPending","enqueue","task","findIndex","m","n","length","k","cmp","expirationTime","splice","requestCallback","fn","options","startTime","timeout","newTask","id","flushWork","cancelCallback","initialTime","workLoop","callback","didUserCallbackTimeout","shift","sharedConfig","context","undefined","registry","setHydrateContext","nextHydrateContext","count","equalFn","a","b","$PROXY","Symbol","$TRACK","$DEVCOMP","signalOptions","equals","ERROR","runEffects","runQueue","STALE","PENDING","UNOWNED","owned","cleanups","owner","NO_INIT","Owner","Transition","Scheduler","ExternalSourceFactory","Listener","Updates","Effects","ExecCount","DevHooks","afterUpdate","afterCreateOwner","transPending","setTransPending","createSignal","createRoot","detachedOwner","listener","unowned","root","updateFn","Error","untrack","cleanNode","runUpdates","value","Object","assign","s","observers","observerSlots","comparator","internal","name","registerGraph","setter","running","sources","has","tValue","writeSignal","readSignal","bind","createComputed","c","createComputation","push","updateComputation","createRenderEffect","createEffect","runUserEffects","SuspenseContext","lookup","suspense","render","user","createReaction","onInvalidate","tracking","createMemo","tState","createResource","pSource","pFetcher","pOptions","source","fetcher","arguments","pr","initP","loadedUnderTransition","scheduled","resolved","dynamic","contexts","Set","setValue","storage","initialValue","setError","track","trigger","state","setState","v","ssrLoadFrom","load","loadEnd","p","key","onHydrated","queueMicrotask","promises","delete","completeLoad","err","keys","decrement","clear","read","add","increment","refetching","then","e","castError","defineProperties","get","loading","latest","refetch","mutate","createDeferred","t","timeoutMs","node","setDeferred","deferred","createSelector","subs","Map","val","entries","values","pure","l","set","onCleanup","size","batch","on","deps","isArray","Array","prevInput","defer","prevValue","input","i","result","onMount","console","warn","catchError","handler","handleError","onError","getListener","getOwner","runWithOwner","o","prev","prevListener","enableScheduling","scheduler","startTransition","done","Promise","resolve","effects","disposed","queue","res","useTransition","resumeEffects","apply","devComponent","Comp","props","component","sourceMap","graph","createContext","defaultValue","Provider","createProvider","useContext","ctx","children","memo","resolveChildren","toArray","getSuspenseContext","enableExternalSource","factory","oldFactory","oldSource","x","dispose","runningTransition","updates","lookUpstream","sSlot","sourceSlots","isComp","current","TransitionRunning","markDownstream","time","runComputation","nextValue","tOwned","forEach","updatedAt","init","ordinary","triggerInTransition","inTransition","runTop","inFallback","ancestors","top","wait","completeUpdates","scheduleQueue","d","len","item","tasks","userLength","ignore","pop","index","obs","reset","cause","runErrors","fns","f","results","provider","observable","subscribe","observer","TypeError","next","unsubscribe","disposer","from","producer","unsub","clean","FALLBACK","mapArray","list","mapFn","items","mapped","disposers","indexes","newItems","j","newLen","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","fallback","mapper","Math","min","slice","indexArray","signals","hydrationEnabled","enableHydration","createComponent","r","trueFn","propTraps","_","property","receiver","deleteProperty","getOwnPropertyDescriptor","configurable","enumerable","ownKeys","resolveSource","mergeProps","_len","_key","proxy","Proxy","target","descriptors","getOwnPropertyDescriptors","defineProperty","splitProps","_len2","_key2","blocked","flat","map","includes","filter","clone","lazy","comp","wrap","mod","default","preload","counter","createUniqueId","narrowedError","For","each","Index","Show","keyed","condition","when","child","Switch","conditions","evalConditions","conds","cond","Match","Errors","resetErrorBoundaries","ErrorBoundary","errored","setErrored","suspenseListEquals","showContent","showFallback","SuspenseListContext","SuspenseList","wrapper","setWrapper","show","listContext","setRegistry","register","reveal","revealOrder","tail","reg","reverse","all","every","stop","Suspense","flicker","setFallback","store","ref","gather","rendered","DEV","hooks","globalThis","Solid$$"],"sources":["C:/Users/user/Desktop/השטויות של בן/messaging-board/node_modules/solid-js/dist/dev.js"],"sourcesContent":["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined\n};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nconst DevHooks = {\n  afterUpdate: null,\n  afterCreateOwner: null\n};\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    root = unowned ? {\n      owned: null,\n      cleanups: null,\n      context: null,\n      owner: null\n    }  : {\n      owned: null,\n      cleanups: null,\n      context: null,\n      owner: detachedOwner === undefined ? owner : detachedOwner\n    },\n    updateFn = unowned ? () => fn(() => {\n      throw new Error(\"Dispose method must be an explicit argument to createRoot function\");\n    })  : () => fn(() => untrack(() => cleanNode(root)));\n  DevHooks.afterCreateOwner && DevHooks.afterCreateOwner(root);\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  if (!options.internal) {\n    if (options.name) s.name = options.name;\n    registerGraph(s);\n  }\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE, options );\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE, options );\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE, options ),\n    s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0, options ),\n    s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0, options );\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = (\"initialValue\" in options),\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v[0];\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : \"ready\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(p && \"then\" in p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE, options );\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) console.warn(\"cleanups created outside a `createRoot` or `render` will never be run\");else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) console.warn(\"error handlers created outside a `createRoot` or `render` will never be run\");else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction devComponent(Comp, props) {\n  const c = createComputation(() => untrack(() => {\n    Object.assign(Comp, {\n      [$DEVCOMP]: true\n    });\n    return Comp(props);\n  }), undefined, true, 0);\n  c.props = props;\n  c.observers = null;\n  c.observerSlots = null;\n  c.name = Comp.name;\n  c.component = Comp;\n  updateComputation(c);\n  return c.tValue !== undefined ? c.tValue : c.value;\n}\nfunction registerGraph(value) {\n  if (!Owner) return;\n  if (Owner.sourceMap) Owner.sourceMap.push(value);else Owner.sourceMap = [value];\n  value.graph = Owner;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id, options),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()), undefined, {\n    name: \"children\"\n  }) ;\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (true) throw new Error(\"Potential Infinite Loop Detected.\");\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n    listener = Listener,\n    time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) console.warn(\"computations created outside a `createRoot` or `render` will never be disposed\");else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (options && options.name) c.name = options.name;\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  DevHooks.afterCreateOwner && DevHooks.afterCreateOwner(c);\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);else DevHooks.afterUpdate && DevHooks.afterUpdate();\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n  delete node.sourceMap;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(fns, err) {\n  for (const f of fns) f(err);\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  const error = castError(err);\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(fns, error);\n    },\n    state: STALE\n  });else runErrors(fns, error);\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined, options);\n    return res;\n  };\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n        newIndices,\n        newIndicesNext,\n        temp,\n        tempdisposers,\n        tempIndexes,\n        start,\n        end,\n        newEnd,\n        item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j, {\n          name: \"index\"\n        }) ;\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i], {\n        name: \"value\"\n      }) ;\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = devComponent(Comp, props || {}) ;\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return devComponent(Comp, props || {});\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  for (let i = sources.length - 1; i >= 0; i--) {\n    if (sources[i]) {\n      const descriptors = Object.getOwnPropertyDescriptors(sources[i]);\n      for (const key in descriptors) {\n        if (key in target) continue;\n        Object.defineProperty(target, key, {\n          enumerable: true,\n          get() {\n            for (let i = sources.length - 1; i >= 0; i--) {\n              const v = (sources[i] || {})[key];\n              if (v !== undefined) return v;\n            }\n          }\n        });\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  if ($PROXY in props) {\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  keys.push(Object.keys(descriptors).filter(k => !blocked.has(k)));\n  return keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      if (!(key in props)) continue;\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        },\n        enumerable: true\n      });\n    }\n    return clone;\n  });\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (true) Object.assign(Comp, {\n        [$DEVCOMP]: true\n      });\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Attempting to access a stale value from <${name}> that could possibly be undefined. This may occur because you are reading the accessor returned from the component at a time where it has already been unmounted. We recommend cleaning up any stale timers or async, or reading from the initial condition.` ;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined), undefined, {\n    name: \"value\"\n  }) ;\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined), undefined, {\n    name: \"value\"\n  }) ;\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => keyed ? a === b : !a === !b,\n    name: \"condition\"\n  } );\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return props.when;\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, {\n    name: \"value\"\n  } );\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => a[0] === b[0] && (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(() => {\n      let conds = conditions();\n      if (!Array.isArray(conds)) conds = [conds];\n      for (let i = 0; i < conds.length; i++) {\n        const c = conds[i].when;\n        if (c) {\n          keyed = !!conds[i].keyed;\n          return [i, c, conds[i]];\n        }\n      }\n      return [-1];\n    }, undefined, {\n      equals,\n      name: \"eval conditions\"\n    } );\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    return fn ? untrack(() => c(keyed ? when : () => {\n      if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n      return cond.when;\n    })) : c;\n  }, undefined, {\n    name: \"value\"\n  } );\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  let v;\n  if (sharedConfig.context && sharedConfig.load && (v = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count))) err = v[0];\n  const [errored, setErrored] = createSignal(err, {\n    name: \"errored\"\n  } );\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      if ((typeof f !== \"function\" || f.length == 0)) console.error(e);\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, {\n    name: \"value\"\n  } );\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    let ref = sharedConfig.load(key);\n    if (ref && (p = ref[0]) && p !== \"$$f\") {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if (err || sharedConfig.done) {\n          err && (error = err);\n          return set();\n        }\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = {\n  hooks: DevHooks,\n  writeSignal,\n  registerGraph\n} ;\nif (globalThis) {\n  if (!globalThis.Solid$$) globalThis.Solid$$ = true;else console.warn(\"You appear to have multiple instances of Solid. This can lead to unexpected behavior.\");\n}\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}