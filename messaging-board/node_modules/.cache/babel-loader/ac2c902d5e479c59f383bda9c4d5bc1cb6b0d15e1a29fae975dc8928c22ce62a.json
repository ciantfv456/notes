{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\u05D4\\u05E9\\u05D8\\u05D5\\u05D9\\u05D5\\u05EA \\u05E9\\u05DC \\u05D1\\u05DF\\\\messaging-board\\\\src\\\\components\\\\Message.js\";\nimport React, { Component } from 'react';\nimport Draggable, { DraggableCore } from 'react-draggable';\nimport { graphql } from 'react-apollo';\nimport { flowRight as compose } from 'lodash';\nimport { getMessagesQuery, updateMessageQuery } from \"../queries/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      title: \"\",\n      content: \"\",\n      userId: \"\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  changeTitle(e) {\n    console.log(e);\n    this.props.updateMessageQuery({\n      variables: {\n        id: this.state.id,\n        title: this.state.title,\n        content: this.state.content\n      }\n    });\n  }\n  stopDraggingEvent(e, dragElement) {\n    this.props.updateMessageQuery({\n      variables: {\n        id: this.state.id,\n        position: {\n          x: this.state.position.x + dragElement.x,\n          y: this.state.position.y + dragElement.y\n        }\n      }\n    });\n  }\n  render() {\n    const message = this.props.message;\n    this.setState({\n      id: message.id,\n      title: message.title,\n      content: message.content,\n      position: {\n        x: message.position.x,\n        y: message.position.y\n      }\n    });\n    const newStyle = {\n      position: \"absolute\",\n      left: `${message.position.x}px`,\n      top: `${message.position.y}px`\n    };\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      onStop: this.stopDraggingEvent.bind(this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: message.id,\n        style: newStyle,\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          onChange: this.changeTitle.bind(this),\n          children: message.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"writer\",\n            children: [\"- \", message.user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n}\nclass Messages extends Component {\n  readMessages() {\n    console.log(this.props);\n    if (this.props.getMessagesQuery.loading) {\n      return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this);\n    }\n    return this.props.getMessagesQuery.messages.map(message => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        updateMessageQuery: this.props.updateMessageQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.readMessages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default compose(graphql(getMessagesQuery, {\n  name: \"getMessagesQuery\"\n}), graphql(updateMessageQuery, {\n  name: \"updateMessageQuery\"\n}))(Messages);","map":{"version":3,"names":["React","Component","Draggable","DraggableCore","graphql","flowRight","compose","getMessagesQuery","updateMessageQuery","jsxDEV","_jsxDEV","Message","constructor","props","state","id","title","content","userId","position","x","y","changeTitle","e","console","log","variables","stopDraggingEvent","dragElement","render","message","setState","newStyle","left","top","onStop","bind","children","style","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","user","username","Messages","readMessages","loading","LoadingScreen","messages","map","name"],"sources":["C:/Users/user/Desktop/השטויות של בן/messaging-board/src/components/Message.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport Draggable, {DraggableCore} from 'react-draggable';\r\nimport {graphql} from 'react-apollo'\r\nimport {flowRight as compose} from 'lodash';\r\nimport {getMessagesQuery, updateMessageQuery} from \"../queries/queries\"\r\n\r\n\r\n\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            title: \"\",\r\n            content: \"\",\r\n            userId: \"\",\r\n            position: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        }\r\n    }\r\n    changeTitle(e) {\r\n        console.log(e)\r\n        this.props.updateMessageQuery({\r\n            variables: {\r\n                id: this.state.id,\r\n                title: this.state.title, \r\n                content: this.state.content,\r\n            }\r\n        })\r\n    }\r\n    stopDraggingEvent(e, dragElement) {\r\n        this.props.updateMessageQuery({\r\n            variables: {\r\n                id: this.state.id,\r\n                position: {\r\n                    x: this.state.position.x + dragElement.x,\r\n                    y: this.state.position.y + dragElement.y,\r\n                }, \r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const message = this.props.message;\r\n        this.setState({id: message.id, title: message.title, content: message.content, position: {x: message.position.x, y: message.position.y}})\r\n        const newStyle = {\r\n            position: \"absolute\",\r\n            left: `${message.position.x}px`,\r\n            top: `${message.position.y}px`\r\n        };\r\n        \r\n        return (\r\n        <Draggable key={message.id} onStop={this.stopDraggingEvent.bind(this)}>\r\n            <div id={message.id} style={newStyle} className='message' key={message.id}>\r\n                <div className='title' onChange={this.changeTitle.bind(this)}>\r\n                    {message.title}\r\n                </div>\r\n                <div className='content'>\r\n                    <p>\r\n                        {message.content}\r\n                    </p>\r\n                    <p className='writer'>- {message.user.username}</p>\r\n                </div>\r\n            </div>\r\n        </Draggable>\r\n        )\r\n    }\r\n}\r\nclass Messages extends Component {\r\n    \r\n    readMessages() {\r\n        console.log(this.props)\r\n        if (this.props.getMessagesQuery.loading) {\r\n            return <LoadingScreen/>\r\n        }\r\n        return this.props.getMessagesQuery.messages.map(message => {\r\n            return <Message message={message} updateMessageQuery={this.props.updateMessageQuery}/>\r\n        })\r\n    }\r\n    render() {\r\n        return <div>\r\n            {this.readMessages()}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(getMessagesQuery, {name: \"getMessagesQuery\"}),\r\n    graphql(updateMessageQuery, {name: \"updateMessageQuery\"}),\r\n    )(Messages);"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,SAAS,IAAGC,aAAa,QAAO,iBAAiB;AACxD,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,SAAS,IAAIC,OAAO,QAAO,QAAQ;AAC3C,SAAQC,gBAAgB,EAAEC,kBAAkB,QAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKvE,MAAMC,OAAO,SAASV,SAAS,CAAC;EAC5BW,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;QACNC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;MACP;IACJ,CAAC;EACL;EACAC,WAAWA,CAACC,CAAC,EAAE;IACXC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,IAAI,CAACV,KAAK,CAACL,kBAAkB,CAAC;MAC1BkB,SAAS,EAAE;QACPX,EAAE,EAAE,IAAI,CAACD,KAAK,CAACC,EAAE;QACjBC,KAAK,EAAE,IAAI,CAACF,KAAK,CAACE,KAAK;QACvBC,OAAO,EAAE,IAAI,CAACH,KAAK,CAACG;MACxB;IACJ,CAAC,CAAC;EACN;EACAU,iBAAiBA,CAACJ,CAAC,EAAEK,WAAW,EAAE;IAC9B,IAAI,CAACf,KAAK,CAACL,kBAAkB,CAAC;MAC1BkB,SAAS,EAAE;QACPX,EAAE,EAAE,IAAI,CAACD,KAAK,CAACC,EAAE;QACjBI,QAAQ,EAAE;UACNC,CAAC,EAAE,IAAI,CAACN,KAAK,CAACK,QAAQ,CAACC,CAAC,GAAGQ,WAAW,CAACR,CAAC;UACxCC,CAAC,EAAE,IAAI,CAACP,KAAK,CAACK,QAAQ,CAACE,CAAC,GAAGO,WAAW,CAACP;QAC3C;MACJ;IACJ,CAAC,CAAC;EACN;EACAQ,MAAMA,CAAA,EAAG;IACL,MAAMC,OAAO,GAAG,IAAI,CAACjB,KAAK,CAACiB,OAAO;IAClC,IAAI,CAACC,QAAQ,CAAC;MAAChB,EAAE,EAAEe,OAAO,CAACf,EAAE;MAAEC,KAAK,EAAEc,OAAO,CAACd,KAAK;MAAEC,OAAO,EAAEa,OAAO,CAACb,OAAO;MAAEE,QAAQ,EAAE;QAACC,CAAC,EAAEU,OAAO,CAACX,QAAQ,CAACC,CAAC;QAAEC,CAAC,EAAES,OAAO,CAACX,QAAQ,CAACE;MAAC;IAAC,CAAC,CAAC;IACzI,MAAMW,QAAQ,GAAG;MACbb,QAAQ,EAAE,UAAU;MACpBc,IAAI,EAAG,GAAEH,OAAO,CAACX,QAAQ,CAACC,CAAE,IAAG;MAC/Bc,GAAG,EAAG,GAAEJ,OAAO,CAACX,QAAQ,CAACE,CAAE;IAC/B,CAAC;IAED,oBACAX,OAAA,CAACR,SAAS;MAAkBiC,MAAM,EAAE,IAAI,CAACR,iBAAiB,CAACS,IAAI,CAAC,IAAI,CAAE;MAAAC,QAAA,eAClE3B,OAAA;QAAKK,EAAE,EAAEe,OAAO,CAACf,EAAG;QAACuB,KAAK,EAAEN,QAAS;QAACO,SAAS,EAAC,SAAS;QAAAF,QAAA,gBACrD3B,OAAA;UAAK6B,SAAS,EAAC,OAAO;UAACC,QAAQ,EAAE,IAAI,CAAClB,WAAW,CAACc,IAAI,CAAC,IAAI,CAAE;UAAAC,QAAA,EACxDP,OAAO,CAACd;QAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACZ,eACNlC,OAAA;UAAK6B,SAAS,EAAC,SAAS;UAAAF,QAAA,gBACpB3B,OAAA;YAAA2B,QAAA,EACKP,OAAO,CAACb;UAAO;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAChB,eACJlC,OAAA;YAAG6B,SAAS,EAAC,QAAQ;YAAAF,QAAA,GAAC,IAAE,EAACP,OAAO,CAACe,IAAI,CAACC,QAAQ;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjD;MAAA,GATqDd,OAAO,CAACf,EAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAUnE,GAXMd,OAAO,CAACf,EAAE;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAYd;EAEhB;AACJ;AACA,MAAMG,QAAQ,SAAS9C,SAAS,CAAC;EAE7B+C,YAAYA,CAAA,EAAG;IACXxB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,KAAK,CAAC;IACvB,IAAI,IAAI,CAACA,KAAK,CAACN,gBAAgB,CAAC0C,OAAO,EAAE;MACrC,oBAAOvC,OAAA,CAACwC,aAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAC3B;IACA,OAAO,IAAI,CAAC/B,KAAK,CAACN,gBAAgB,CAAC4C,QAAQ,CAACC,GAAG,CAACtB,OAAO,IAAI;MACvD,oBAAOpB,OAAA,CAACC,OAAO;QAACmB,OAAO,EAAEA,OAAQ;QAACtB,kBAAkB,EAAE,IAAI,CAACK,KAAK,CAACL;MAAmB;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAC1F,CAAC,CAAC;EACN;EACAf,MAAMA,CAAA,EAAG;IACL,oBAAOnB,OAAA;MAAA2B,QAAA,EACF,IAAI,CAACW,YAAY;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB;EACV;AACJ;AAEA,eAAetC,OAAO,CAClBF,OAAO,CAACG,gBAAgB,EAAE;EAAC8C,IAAI,EAAE;AAAkB,CAAC,CAAC,EACrDjD,OAAO,CAACI,kBAAkB,EAAE;EAAC6C,IAAI,EAAE;AAAoB,CAAC,CAAC,CACxD,CAACN,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}