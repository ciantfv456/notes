interface dependencyJson {
    [packageName: string]: string;
}
/**
 * 从文件或文件夹中递归获取依赖
 * @param {string} filePath 需要遍历的文件路径
 * @param {string[]} extend 搜索的拓展名
 * @returns {string[]} fileList 文件列表
 */
declare function getDepends(path: string, extend: string[]): string[];
/**
 * Search dependencies and install
 * @param {string} path search path
 * @param {Object<string,string>} attach attach dependencies
 * @param {string} npmClient package install client
 * @param {string[]} excludeOption options excluded from package.json
 * @param {string[]} extend filter suffix of searching files
 * @param {boolean} silent silent info
 * @return {Promise<dependencyJson>} <dependencies,version> installed
 */
declare const requireResolver: (path: string, attach?: dependencyJson, npmClient?: string, excludeOption?: string[], extend?: string[], silent?: boolean) => Promise<dependencyJson>;

export default requireResolver;
export { dependencyJson, getDepends };
